{"version":3,"sources":["components/tags/style.module.css","components/post/style.module.css","components/logo/style.module.css","ui/img/style.module.css","ui/iframe/style.module.css","ui/codeblock/style.module.css","components/header/style.module.css","components/layout/style.module.css","endpoints/index.js","requests/posts.js","mocks/tags.js","requests/tags.js","normalizers/index.js","resolvers/index.js","selectors/posts.js","selectors/tags.js","actions/index.js","ui/a/index.js","ui/p/index.js","ui/em/index.js","ui/span/index.js","ui/list/index.js","ui/br/index.js","ui/hr/index.js","ui/abbr/index.js","ui/heading/index.js","ui/img/index.js","ui/strong/index.js","ui/del/index.js","ui/iframe/index.js","ui/figure/index.js","ui/codeblock/index.js","helpers/index.js","reducers/posts.js","reducers/tags.js","reducers/index.js","reducers/errors.js","reducers/loading.js","store.js","components/404/index.js","components/dynamic-scroll-to-top/index.js","components/header/index.js","components/logo/index.js","components/post-preview-list/index.js","components/post/index.js","components/post-preview/index.js","components/tag-page/index.js","components/tags/index.js","containers/main-page-container.js","selectors/loading.js","containers/post-container.js","containers/tag-page-container.js","containers/tags-container.js","serviceWorker.js","containers/header-container.js","index.js","components/layout/index.js"],"names":["module","exports","root","list","list-item","link","active","article","preview","footer","date","logo","img","iframe-wrap","iframe","iframe-image","video-link","pre","baseUrl","Endpoints","posts","tags","postsRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","id","count","description","name","slug","taxonomy","meta","tagsRequest","_ref2","data","mockTags","postSchema","schema","Entity","idAttribute","tagSchema","normalizePosts","_normalize","normalize","entities","getOr","normalizeTags","_normalize2","parser","DOMParser","getParsedContents","pipe","content","toConsumableArray","parseFromString","body","childNodes","getHeading","processPost","post","set","pick","processTag","resolvePosts","response","processedPosts","_normalizePosts","_normalizePosts2","postIds","postCollection","map","slicedToArray","resolveTags","_callee2","processedTags","_normalizeTags","_normalizeTags2","tagIds","tagCollection","_context2","reject","orderBy","selectPosts","selectPostCollection","selectPostIds","selectTags","selectTagCollection","selectTagIds","getPosts","dispatch","getState","type","state","size","keys","payload","then","catch","error","A","href","children","className","isInternal","URL","hostname","window","location","target","rel","react_default","createElement","react","P","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","props","Component","Em","Span","Ul","Ol","Li","Br","Hr","Abbr","_this$props","title","H1","H2","H3","H4","H5","H6","Img","src","alt","sizes","srcset","imageClassNames","classNames","styles","srcSet","loading","Strong","Del","cx","bind","youtubePreviewLinkClassNames","YoutubeVideoPreview","a_A","getYoutubeVideoLink","img_Img","getYoutubeThumbnailImageUrl","Iframe","youtubeVideoId","getYoutubeVideoIdFromString","iframe_YoutubeVideoPreview","Figure","Pre","Code","url","replace","stringsArray","split","concat","capitalize","string","length","toUpperCase","slice","toLowerCase","tagToComponentLookup","objectSpread","UI","Fragment","selectComponentByTagName","tagName","renderNodeAsComponent","node","index","_node$tagName","textContent","allow","allowfullscreen","console","warn","contents","additionalParameters","assign","createReducer","initialState","actionLookup","undefined","action","isString","reducer","isFunction","getRandomNumberWithinRange","_ref$min","min","_ref$max","max","Math","round","random","defineProperty","combineReducers","postsReducer","errors","_","tagsReducer","loadingPosts","loadingTags","INITIAL_STATE","enhancers","middleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","compose","applyMiddleware","Page404","DynamicScrollToTop","history","hash","useEffect","element","document","querySelector","scrollIntoView","block","behavior","scrollTo","propTypes","PropTypes","ScrollToTop","withRouter","Header","logo_Logo","getAlternateLetters","getTextTransform","Logo","_getPrototypeOf2","_this","_len","args","Array","_key","call","fontFeatureSettings","textTransform","interval","_this2","setState","setInterval","clearInterval","_this$state","react_router_dom","activeClassName","exact","to","style","PostPreviewList","post_preview_PostPreview","PostHeader","heading_H1","PostFooter","tags_container","dateTime","Date","toLocaleDateString","formatDate","Post","heading","articleClasses","post_PostHeader","post_PostFooter","PostPreview","post_Post","Tag","Tags","getTags","tags_Tag","mapDispatchToProps","connect","selectLoading","selectLoadingPosts","selectLoadingTags","PostContainer","_this$props2","isLoadingPosts","match","selectedPostInSlug","find","TagPageContainer","tag","isLoadingTags","postsFilteredByTag","tag_page_Tag","tagId","selectedTagInSlug","selectedTagId","filter","includes","Boolean","header_Header","store","createStore","rootReducer","configureStore","ReactDOM","render","es","basename","process","header_container","react_router","path","component","MainPageContainer","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1148885c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1Kqx4\",\"list\":\"style_list__2Q_aN\",\"list-item\":\"style_list-item__1tBsy\",\"link\":\"style_link__1egW5\",\"active\":\"style_active__3bCbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"style_article__3KKN2\",\"link\":\"style_link__1UsJu\",\"preview\":\"style_preview__EI3dA\",\"footer\":\"style_footer__1Y5e8\",\"date\":\"style_date__1J92U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"style_logo__bUMKv\",\"link\":\"style_link__2mbcy\",\"active\":\"style_active__2fDbX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"style_img__10R8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iframe-wrap\":\"style_iframe-wrap__2A2w4\",\"iframe\":\"style_iframe__2D5_P\",\"iframe-image\":\"style_iframe-image__2aLQA\",\"video-link\":\"style_video-link__1s8sx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre\":\"style_pre__9hDnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2rrMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2wf_j\"};","const baseUrl = 'https://vladsamoylov.com'\n\nexport const Endpoints = {\n    posts: baseUrl + '/wp-json/wp/v2/posts?per_page=100',\n    tags: baseUrl + '/wp-json/wp/v2/tags',\n}\n","import { Endpoints } from 'endpoints'\n\nexport const postsRequest = async () => {\n    const result = await fetch(Endpoints.posts)\n\n    return await result.json()\n}\n","/* eslint-disable */\nexport const tags = [{\n    'id': 10,\n    'count': 1,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/bot/',\n    'name': 'bot',\n    'slug': 'bot',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 13,\n    'count': 2,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/css/',\n    'name': 'css',\n    'slug': 'css',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 7,\n    'count': 2,\n    'description': '<strong>What is it?</strong>\\r\\n\\r\\n<p class=\"fade\">It happens sometimes: you see something cool, you try to google it, you find yourself stuck on a giant longread, and by the time you make it through the text, all your curiosity is gone.</p>\\r\\n\\r\\n<p class=\"fade\">In order to avoid this information overload I started In a nutshell \\u2013 a new series of posts, where I basically try to make <strong>a summary</strong> of the information on something given by first couple of google search results page. Just enough to get started without digging too deep.</p>\\r\\n\\r\\n<style>\\r\\n    .fade {\\r\\n        animation: fade 5s 2s linear forwards;\\r\\n    }\\r\\n    .fade strong {\\r\\n        color: var(--color__text);\\r\\n    }\\r\\n    @keyframes fade {\\r\\n        0% {\\r\\n            color: var(--color__text);\\r\\n        }\\r\\n        100% {\\r\\n            color: #cccccc;\\r\\n        }\\r\\n    }\\r\\n</style>',\n    'link': 'https://vladsamoylov.com/tag/in-a-nutshell/',\n    'name': 'in a nutshell',\n    'slug': 'in-a-nutshell',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 12,\n    'count': 2,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/interview/',\n    'name': 'interview',\n    'slug': 'interview',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 5,\n    'count': 9,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/javascript/',\n    'name': 'javascript',\n    'slug': 'javascript',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 8,\n    'count': 2,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/network/',\n    'name': 'network',\n    'slug': 'network',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 6,\n    'count': 3,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/talk/',\n    'name': 'talk',\n    'slug': 'talk',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 9,\n    'count': 1,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/telegram/',\n    'name': 'telegram',\n    'slug': 'telegram',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 14,\n    'count': 1,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/tool/',\n    'name': 'tool',\n    'slug': 'tool',\n    'taxonomy': 'post_tag',\n    'meta': []\n}, {\n    'id': 11,\n    'count': 0,\n    'description': '',\n    'link': 'https://vladsamoylov.com/tag/waapi/',\n    'name': 'waapi',\n    'slug': 'waapi',\n    'taxonomy': 'post_tag',\n    'meta': []\n}]\n","import { Endpoints } from 'endpoints'\nimport { tags as mockTags } from 'mocks/tags'\n\nexport const tagsRequest = async () => {\n    const result = await fetch(Endpoints.tags)\n    const { data } = await result.json()\n\n    return data || mockTags\n}\n","import { schema, normalize } from 'normalizr'\nimport { getOr } from 'lodash/fp'\n\nconst postSchema = new schema.Entity('post', {}, { idAttribute: 'id' })\nconst tagSchema = new schema.Entity('tag', {}, { idAttribute: 'id' })\n\nexport const normalizePosts = posts => {\n    const { entities, result } = normalize(posts, [postSchema])\n    const collection = getOr({}, ['post'], entities)\n\n    return [result, collection]\n}\n\nexport const normalizeTags = tags => {\n    const { entities, result } = normalize(tags, [tagSchema])\n    const collection = getOr({}, ['tag'], entities)\n\n    return [result, collection]\n}\n","import {\n    pipe,\n    getOr,\n    pick,\n    set,\n    map,\n    orderBy,\n    reject,\n} from 'lodash/fp'\nimport { postsRequest, tagsRequest } from 'requests'\nimport { normalizePosts, normalizeTags } from 'normalizers'\n\nconst parser = new DOMParser()\n\nconst parseFromStringAsText = content => [\n    ...parser\n        .parseFromString(content, 'text/html')\n        .body\n        .childNodes,\n]\n\nconst getParsedContents = pipe([\n    getOr('', ['content', 'rendered']),\n    parseFromStringAsText,\n])\n\nconst getHeading = getOr('', ['title', 'rendered'])\n\nconst setParsedContents = post => set(['contents'], getParsedContents(post), post)\n\nconst setHeading = post => set(['heading'], getHeading(post), post)\n\nconst processPost = pipe([\n    setParsedContents,\n    setHeading,\n    pick([\n        'id',\n        'heading',\n        'contents',\n        'slug',\n        'date',\n        'tags',\n    ]),\n])\n\nconst processTag = pick([\n    'count',\n    'id',\n    'name',\n    'slug',\n])\n\nexport const resolvePosts = async () => {\n    const response = await postsRequest()\n    const processedPosts = map(processPost, response)\n\n    const [postIds, postCollection] = normalizePosts(processedPosts)\n\n    return { postIds, postCollection }\n}\n\nexport const resolveTags = async () => {\n    const response = await tagsRequest()\n\n    const processedTags = pipe([\n        map(processTag),\n        reject(['count', 0]),\n        orderBy(['count', 'name'], ['desc', 'asc']),\n    ])(response)\n\n    const [tagIds, tagCollection] = normalizeTags(processedTags)\n\n    return { tagIds, tagCollection }\n}\n","import { getOr, pipe, find, filter } from 'lodash/fp'\n\nexport const selectPosts = getOr({}, ['posts'])\n\nexport const selectPostCollection = pipe([\n    selectPosts,\n    getOr({}, ['postCollection']),\n])\n\nexport const selectPostIds = pipe([\n    selectPosts,\n    getOr([], ['postIds']),\n])\n\nexport const selectSelectedPost = slug => pipe([\n    selectPostCollection,\n    find(post => post.slug === slug),\n])\n\nexport const selectPostCollectionByTagId = tagId => pipe([\n    selectPostCollection,\n    filter(post => post.tags.includes(tagId)),\n])\n","import { getOr, pipe, find } from 'lodash/fp'\n\nexport const selectTags = getOr({}, ['tags'])\n\nexport const selectTagCollection = pipe([\n    selectTags,\n    getOr({}, ['tagCollection']),\n])\n\nexport const selectTagIds = pipe([\n    selectTags,\n    getOr([], ['tagIds']),\n])\n\nexport const selectSelectedTag = slug => pipe([\n    selectTagCollection,\n    find(tag => tag.slug === slug),\n])\n","import { size, keys } from 'lodash/fp'\nimport { resolvePosts, resolveTags } from 'resolvers'\nimport {\n    selectPostCollection,\n    selectPosts,\n} from 'selectors/posts'\nimport { selectTagCollection, selectTags } from 'selectors/tags'\n\nexport const POSTS_GET = 'POSTS_GET'\nexport const POSTS_GET_SUCCESS = 'POSTS_GET_SUCCESS'\nexport const POSTS_GET_FAILURE = 'POSTS_GET_FAILURE'\n\nexport const TAGS_GET = 'TAGS_GET'\nexport const TAGS_GET_SUCCESS = 'TAGS_GET_SUCCESS'\nexport const TAGS_GET_FAILURE = 'TAGS_GET_FAILURE'\n\nexport const getPosts = () => (dispatch, getState) => {\n    dispatch({\n        type: POSTS_GET,\n    })\n\n    const state = getState()\n    const postCollection = selectPostCollection(state)\n\n    if (size(keys(postCollection)) > 0) {\n        return dispatch({\n            type: POSTS_GET_SUCCESS,\n            payload: selectPosts(state),\n        })\n    }\n\n    return resolvePosts()\n        .then(posts => dispatch({\n            type: POSTS_GET_SUCCESS,\n            payload: posts,\n        }))\n        .catch(error => dispatch({\n            type: POSTS_GET_FAILURE,\n            payload: error,\n        }))\n}\n\nexport const getTags = () => (dispatch, getState) => {\n    dispatch({\n        type: TAGS_GET,\n    })\n\n    const state = getState()\n    const tagCollection = selectTagCollection(state)\n\n    if (size(keys(tagCollection)) > 0) {\n        return dispatch({\n            type: TAGS_GET_SUCCESS,\n            payload: selectTags(state),\n        })\n    }\n\n    return resolveTags()\n        .then(tags => dispatch({\n            type: TAGS_GET_SUCCESS,\n            payload: tags,\n        }))\n        .catch(error => dispatch({\n            type: TAGS_GET_FAILURE,\n            payload: error,\n        }))\n}\n","import React, { Fragment } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport const A = ({ href, children, className }) => {\n    const isInternal = new URL(href).hostname === window.location.hostname\n    const target = isInternal ? '_self' : '_blank'\n    const rel = isInternal ? null : 'noreferrer noopener'\n\n    return (\n        <Fragment>\n            <a\n                className={className}\n                href={href}\n                target={target}\n                rel={rel}>\n                {children}\n            </a>\n            <link rel='prefetch' href={href} />\n        </Fragment>\n    )\n}\n\nA.propTypes = {\n    href: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class P extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <p>{this.props.children}</p>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Em extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <em>{this.props.children}</em>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Span extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <span>{this.props.children}</span>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nclass Ul extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <ul>{this.props.children}</ul>\n        )\n    }\n}\n\nclass Ol extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <ol>{this.props.children}</ol>\n        )\n    }\n}\n\nclass Li extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <li>{this.props.children}</li>\n        )\n    }\n}\n\nexport {\n    Ul,\n    Ol,\n    Li,\n}\n","import React, { Component } from 'react'\n\nexport class Br extends Component {\n    render() {\n        return (\n            <br />\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport class Hr extends Component {\n    render() {\n        return (\n            <hr />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Abbr extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        title: PropTypes.string,\n    }\n\n    render() {\n        const { children, title } = this.props\n\n        return (\n            <abbr title={title}>{children}</abbr>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nclass H1 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h1>{this.props.children}</h1>\n        )\n    }\n}\n\nclass H2 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h2>{this.props.children}</h2>\n        )\n    }\n}\n\nclass H3 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h3>{this.props.children}</h3>\n        )\n    }\n}\n\nclass H4 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h4>{this.props.children}</h4>\n        )\n    }\n}\n\nclass H5 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h5>{this.props.children}</h5>\n        )\n    }\n}\n\nclass H6 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h6>{this.props.children}</h6>\n        )\n    }\n}\n\nexport {\n    H1,\n    H2,\n    H3,\n    H4,\n    H5,\n    H6,\n}\n","import React from 'react'\nimport * as PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport styles from './style.module.css'\n\nexport const Img = ({ src, alt, title, sizes, srcset, className }) => {\n    const imageClassNames = classNames(className, styles.img)\n\n    return (\n        <img\n            className={imageClassNames}\n            src={src}\n            alt={alt}\n            title={title}\n            sizes={sizes}\n            srcSet={srcset}\n            loading='lazy' /* https://addyosmani.com/blog/lazy-loading/ */\n        />\n    )\n}\n\nImg.propTypes = {\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    title: PropTypes.string,\n    sizes: PropTypes.string,\n    srcset: PropTypes.string,\n    className: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Strong extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <strong>{this.props.children}</strong>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Del extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <del>{this.props.children}</del>\n        )\n    }\n}\n","import React from 'react'\nimport styles from './style.module.css'\nimport * as PropTypes from 'prop-types'\nimport classNames from 'classnames/bind'\nimport {\n    getYoutubeVideoIdFromString,\n    getYoutubeThumbnailImageUrl,\n    getYoutubeVideoLink,\n} from 'helpers'\nimport { A, Img } from 'ui'\n\nconst cx = classNames.bind(styles)\nconst youtubePreviewLinkClassNames = cx('iframe', 'video-link')\n\nconst YoutubeVideoPreview = ({ id }) => (\n    <A\n        className={youtubePreviewLinkClassNames}\n        href={getYoutubeVideoLink(id)}>\n        <Img src={getYoutubeThumbnailImageUrl(id)}\n            className={cx('iframe-image')}\n            alt='youtube video'\n            title='youtube video' />\n    </A>\n)\n\nYoutubeVideoPreview.propTypes = {\n    id: PropTypes.string,\n}\n\nexport const Iframe = ({ src, title }) => {\n    const youtubeVideoId = getYoutubeVideoIdFromString(src)\n\n    return (\n        <span className={cx('iframe-wrap')}>\n            {youtubeVideoId ? (\n                <YoutubeVideoPreview id={youtubeVideoId} />\n            ) : (\n                <iframe className={cx('iframe')}\n                    src={src}\n                    title={title}\n                    loading='lazy' />\n            )}\n        </span>\n    )\n}\n\nIframe.propTypes = {\n    src: PropTypes.string,\n    title: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Figure extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <figure>{this.props.children}</figure>\n        )\n    }\n}\n","import React from 'react'\nimport styles from './style.module.css'\nimport * as PropTypes from 'prop-types'\n\nconst Pre = ({ children }) => (\n    <pre className={styles.pre}>{children}</pre>\n)\n\nPre.propTypes = {\n    children: PropTypes.node,\n}\n\nconst Code = ({ children }) => (\n    <code>{children}</code>\n)\n\nCode.propTypes = {\n    children: PropTypes.node,\n}\n\nexport { Pre, Code }\n","import React, { Fragment } from 'react'\nimport { isString, isFunction } from 'lodash/fp'\nimport * as UI from 'ui'\n\nexport const getYoutubeVideoIdFromString = url => {\n    if (!url || !url.replace) {\n        return null\n    }\n    const stringsArray = url.replace(/([><])/gi, '').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/)\n\n    if (stringsArray[2]) {\n        return stringsArray[2].split(/[^0-9a-z_-]/i)[0]\n    }\n\n    return stringsArray[0]\n}\n\nexport const getYoutubeThumbnailImageUrl = id => `https://i.ytimg.com/vi/${id}/mqdefault.jpg`\nexport const getYoutubeVideoLink = id => `https://www.youtube.com/watch?v=${id}`\n\nexport const capitalize = string => {\n    if (typeof string !== 'string' || string.length === 0) {\n        return null\n    }\n\n    return string[0].toUpperCase() + string.slice(1).toLowerCase()\n}\n\nconst DEFAULT_TAG_NAME = 'span'\n\nconst tagToComponentLookup = {\n    ...UI,\n    Fragment,\n}\n\nconst selectComponentByTagName = tagName => tagToComponentLookup[capitalize(tagName)]\n\nexport const renderNodeAsComponent = (node, index) => {\n    const {\n        childNodes,\n        tagName = 'fragment',\n        textContent,\n        href,\n        title,\n        src,\n        alt,\n        allow,\n        allowfullscreen,\n        sizes,\n        srcset,\n    } = node\n\n    // eslint-disable-next-line no-console\n    if (!tagToComponentLookup[capitalize(tagName)]) console.warn(node)\n    const Component = selectComponentByTagName(tagName) || selectComponentByTagName(DEFAULT_TAG_NAME)\n\n    let contents\n\n    if (!childNodes || childNodes.length === 0) {\n        contents = textContent\n    }\n    else {\n        contents = [...childNodes].map(renderNodeAsComponent)\n    }\n\n    const additionalParameters = {\n        ...href && { href },\n        ...title && { title },\n        ...src && { src },\n        ...alt && { alt },\n        ...allow && { allow },\n        ...allowfullscreen && { allowfullscreen },\n        ...sizes && { sizes },\n        ...srcset && { srcset },\n    }\n\n    return (\n        <Component\n            key={index}\n            {...additionalParameters}>\n            {contents}\n        </Component>\n    )\n}\n\nexport const createReducer = (initialState, actionLookup = {}) => (state = initialState, action) => {\n    if (!action || !isString(action.type)) {\n        return state\n    }\n\n    const reducer = actionLookup[action.type]\n\n    if (!isFunction(reducer)) {\n        return state\n    }\n\n    return reducer(state, action)\n}\n\n/**\n * Returns random number within range\n * @param min\n * @param max\n * @returns {number}\n */\nexport const getRandomNumberWithinRange = ({ min = 0, max = 1 }) => Math.round(Math.random() * (max - min)) + min\n\nexport const formatDate = date => {\n    const dateObject = new Date(date)\n\n    return dateObject.toLocaleDateString()\n}\n","import {\n    POSTS_GET_SUCCESS,\n} from 'actions'\nimport { createReducer } from 'helpers'\n\nconst INITIAL_STATE = {\n    postIds: [],\n    postCollection: {},\n}\n\nexport default createReducer(INITIAL_STATE, {\n    [POSTS_GET_SUCCESS]: (state, { payload }) => {\n        const { postIds, postCollection } = payload\n\n        return {\n            postIds,\n            postCollection,\n        }\n    },\n})\n","import {\n    TAGS_GET_SUCCESS,\n} from 'actions'\nimport { createReducer } from 'helpers'\n\nconst INITIAL_STATE = {\n    tagIds: [],\n    tagCollection: {},\n}\n\nexport default createReducer(INITIAL_STATE, {\n    [TAGS_GET_SUCCESS]: (state, { payload }) => {\n        const { tagIds, tagCollection } = payload\n\n        return {\n            tagIds,\n            tagCollection,\n        }\n    },\n})\n","import { combineReducers } from 'redux'\nimport postsReducer from './posts'\nimport errorsReducer from './errors'\nimport tagsReducer from './tags'\nimport loadingReducer from './loading'\n\nexport default combineReducers({\n    posts: postsReducer,\n    errors: errorsReducer,\n    tags: tagsReducer,\n    loading: loadingReducer,\n})\n","import {\n    POSTS_GET_FAILURE,\n    TAGS_GET_FAILURE,\n} from 'actions'\n\nexport default (_, { type }) => {\n    switch (type) {\n        case TAGS_GET_FAILURE:\n        case POSTS_GET_FAILURE: {\n            return 404\n        }\n        default:\n            return null\n    }\n}\n","import {\n    POSTS_GET,\n    POSTS_GET_SUCCESS,\n    POSTS_GET_FAILURE,\n    TAGS_GET,\n    TAGS_GET_FAILURE,\n    TAGS_GET_SUCCESS,\n} from 'actions'\n\nexport default (state = null, { type }) => {\n    switch (type) {\n        case POSTS_GET:\n            return {\n                ...state,\n                loadingPosts: true,\n            }\n        case POSTS_GET_FAILURE:\n        case POSTS_GET_SUCCESS:\n            return {\n                ...state,\n                loadingPosts: false,\n            }\n        case TAGS_GET:\n            return {\n                ...state,\n                loadingTags: true,\n            }\n        case TAGS_GET_SUCCESS:\n        case TAGS_GET_FAILURE:\n            return {\n                ...state,\n                loadingTags: false,\n            }\n        default:\n            return state\n    }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from 'reducers'\n\nconst INITIAL_STATE = {\n    posts: {},\n    tags: {},\n    errors: null,\n}\n\nconst enhancers = []\nconst middleware = [thunk]\n\nconst { __REDUX_DEVTOOLS_EXTENSION__ } = window\n\nif (typeof __REDUX_DEVTOOLS_EXTENSION__ === 'function') {\n    enhancers.push(__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\nexport default function configureStore(initialState = INITIAL_STATE) {\n    return createStore(\n        rootReducer,\n        initialState,\n        composedEnhancers\n    )\n}\n","export const Page404 = () => 404\n","import { useEffect } from 'react'\nimport * as PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\n\nconst DynamicScrollToTop = ({ history, location }) => {\n\n    const { action } = history\n    const { hash } = location\n\n    useEffect(() => {\n        if (action === 'POP') {\n            return\n        }\n\n        if (hash) {\n            const element = document.querySelector(hash)\n\n            if (element) {\n                element.scrollIntoView({ block: 'start', behavior: 'smooth' })\n            }\n        }\n        else {\n            window.scrollTo(0, 0)\n        }\n    })\n\n    return null\n}\n\nDynamicScrollToTop.propTypes = {\n    history: PropTypes.shape({\n        action: PropTypes.string,\n    }),\n    location: PropTypes.shape({\n        hash: PropTypes.string,\n    }),\n}\n\nexport const ScrollToTop = withRouter(DynamicScrollToTop)\n","import React from 'react'\nimport { Logo } from 'components'\nimport styles from './style.module.css'\n\nexport const Header = () => (\n    <header className={styles.root}>\n        <Logo />\n    </header>\n)\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { getRandomNumberWithinRange } from 'helpers'\nimport styles from './style.module.css'\n\nconst LOGO_RERENDER_INTERVAL = 3000\n\nconst getAlternateLetters = () => `0${getRandomNumberWithinRange({ min: 1, max: 15 })}`.slice(-2)\nconst getTextTransform = () => ['capitalize', 'lowercase', 'uppercase'][getRandomNumberWithinRange({ max: 2 })]\n\nexport class Logo extends Component {\n    state = {\n        fontFeatureSettings: `'ss${getAlternateLetters()}' on`,\n        textTransform: getTextTransform(),\n        interval: null,\n    }\n\n    componentDidMount() {\n        this.setState({\n            interval: setInterval(() => this.setState({\n                fontFeatureSettings: `'ss${getAlternateLetters()}' on`,\n                textTransform: getTextTransform(),\n            }), LOGO_RERENDER_INTERVAL),\n        })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.interval)\n    }\n\n    render() {\n        const { fontFeatureSettings, textTransform } = this.state\n\n        return (\n            <NavLink\n                className={styles.link}\n                activeClassName={styles.active}\n                exact\n                to='/'>\n                <h1\n                    className={styles.logo}\n                    style={{ fontFeatureSettings, textTransform }}>\n                    Vlad Samoylov\n                </h1>\n            </NavLink>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\nimport { PostPreview } from 'components'\n\nexport class PostPreviewList extends Component {\n    static propTypes = {\n        posts: PropTypes.objectOf(\n            PropTypes.shape({\n                id: PropTypes.number,\n                slug: PropTypes.string,\n                contents: PropTypes.array,\n                heading: PropTypes.string,\n                date: PropTypes.string,\n            })\n        ),\n        postIds: PropTypes.arrayOf(PropTypes.number),\n        getPosts: PropTypes.func,\n    }\n\n    componentDidMount() {\n        this.props.getPosts()\n    }\n\n    render() {\n        const { posts, postIds } = this.props\n\n        return postIds.map(id => <PostPreview key={id} {...posts[id]} />)\n    }\n}\n","import React, { Component, Fragment } from 'react'\nimport * as PropTypes from 'prop-types'\nimport classNames from 'classnames/bind'\nimport { Link } from 'react-router-dom'\nimport { TagsContainer } from 'containers'\nimport { H1 } from 'ui'\nimport {\n    formatDate,\n    renderNodeAsComponent,\n} from 'helpers'\nimport { ScrollToTop } from 'components'\nimport styles from './style.module.css'\n\nconst cx = classNames.bind(styles)\n\nconst PostHeader = ({ slug, preview, children }) => {\n    if (preview) {\n        return (\n            <Link to={`/posts/${slug}`} className={styles.link}>\n                <H1>{children}</H1>\n            </Link>\n        )\n    }\n\n    return (\n        <H1>{children}</H1>\n    )\n}\n\nPostHeader.propTypes = {\n    slug: PropTypes.string,\n    preview: PropTypes.bool,\n    children: PropTypes.node,\n}\n\nconst PostFooter = ({ tags, date }) => (\n    <footer className={styles.footer}>\n        {tags && (\n            <TagsContainer tagIds={tags} />\n        )}\n        {date && (\n            <time\n                className={styles.date}\n                dateTime={date}>\n                {formatDate(date)}\n            </time>\n        )}\n    </footer>\n)\n\nPostFooter.propTypes = {\n    tags: PropTypes.arrayOf(\n        PropTypes.number\n    ),\n    date: PropTypes.string,\n}\n\nclass Post extends Component {\n    static propTypes = {\n        heading: PropTypes.string,\n        contents: PropTypes.array,\n        slug: PropTypes.string,\n        preview: PropTypes.bool,\n        tags: PropTypes.arrayOf(\n            PropTypes.number\n        ),\n        date: PropTypes.string,\n    }\n\n    render() {\n        const {\n            heading,\n            contents,\n            preview,\n            slug,\n            tags,\n            date,\n        } = this.props\n        const articleClasses = cx('article', { preview })\n\n        return (\n            <Fragment>\n                <article className={articleClasses}>\n                    <PostHeader\n                        slug={slug}\n                        preview={preview}>\n                        {heading}\n                    </PostHeader>\n                    {contents.map(renderNodeAsComponent)}\n                    <PostFooter\n                        tags={tags}\n                        date={date} />\n                </article>\n                <ScrollToTop />\n            </Fragment>\n        )\n    }\n}\n\nexport { Post }\n","import React from 'react'\nimport { Post } from 'components'\n\nexport const PostPreview = props => <Post {...props} preview />\n","import React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { PostPreview } from 'components/post-preview'\n\nexport const Tag = ({ posts }) => (\n    posts.map(post => <PostPreview key={post.id} {...post} />)\n)\n\nTag.propTypes = {\n    posts: PropTypes.array,\n}\n","import React, { Component, Fragment } from 'react'\nimport * as PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\nimport styles from './style.module.css'\n\nconst Tag = ({ name, slug, count }) => (\n    <Fragment>\n        <NavLink\n            className={styles.link}\n            activeClassName={styles.active}\n            to={`/tags/${slug}`}>\n            {name}\n        </NavLink>\n        <sup>{count}</sup>\n    </Fragment>\n)\n\nTag.propTypes = {\n    count: PropTypes.number,\n    name: PropTypes.string,\n    slug: PropTypes.string,\n}\n\nexport class Tags extends Component {\n    static propTypes = {\n        tags: PropTypes.objectOf(\n            PropTypes.shape({\n                count: PropTypes.number,\n                id: PropTypes.number,\n                name: PropTypes.string,\n                slug: PropTypes.string,\n            })\n        ),\n        tagIds: PropTypes.arrayOf(PropTypes.number),\n        getTags: PropTypes.func,\n    }\n\n    componentDidMount() {\n        this.props.getTags()\n    }\n\n    render() {\n        const { tags, tagIds } = this.props\n\n        return (\n            <div className={styles.root}>\n                <ul className={styles.list}>\n                    {tagIds.map(id => (\n                        <li key={id} className={styles['list-item']}>\n                            <Tag {...tags[id]} />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n","import { connect } from 'react-redux'\nimport { getPosts } from 'actions'\nimport { PostPreviewList } from 'components'\nimport {\n    selectPostCollection,\n    selectPostIds,\n} from 'selectors/posts'\n\nconst mapStateToProps = state => ({\n    posts: selectPostCollection(state),\n    postIds: selectPostIds(state),\n})\n\nconst mapDispatchToProps = {\n    getPosts,\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PostPreviewList)\n","import { getOr, pipe } from 'lodash/fp'\n\nconst selectLoading = getOr(null, 'loading')\n\nexport const selectLoadingPosts = pipe([\n    selectLoading,\n    getOr(false, ['loadingPosts']),\n])\n\nexport const selectLoadingTags = pipe([\n    selectLoading,\n    getOr(false, ['loadingTags']),\n])\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { keys, size, getOr } from 'lodash/fp'\nimport * as PropTypes from 'prop-types'\nimport { getPosts } from 'actions'\nimport { Post, Page404 } from 'components'\nimport {\n    selectPostCollection,\n    selectSelectedPost,\n} from 'selectors/posts'\nimport {\n    selectLoadingPosts,\n} from 'selectors/loading'\n\nclass PostContainer extends Component {\n    static propTypes = {\n        posts: PropTypes.object,\n        post: PropTypes.object,\n        isLoadingPosts: PropTypes.bool,\n        getPosts: PropTypes.func,\n    }\n\n    componentDidMount() {\n        const { posts, getPosts } = this.props\n\n        if (size(keys(posts)) === 0) {\n            getPosts()\n        }\n    }\n\n    render() {\n        const { post, isLoadingPosts } = this.props\n\n        if (isLoadingPosts) {\n            return 'loading...'\n        }\n\n        if (!post) {\n            return <Page404 />\n        }\n\n        return (\n            <Post {...post} />\n        )\n    }\n}\n\nconst mapStateToProps = (state, { match }) => {\n    const selectedPostInSlug = getOr(null, ['params', 'post'])(match)\n    const post = selectSelectedPost(selectedPostInSlug)(state)\n    const posts = selectPostCollection(state)\n    const isLoadingPosts = selectLoadingPosts(state)\n\n    return ({\n        post,\n        posts,\n        isLoadingPosts,\n    })\n}\n\nconst mapDispatchToProps = {\n    getPosts,\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PostContainer)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getOr } from 'lodash/fp'\nimport * as PropTypes from 'prop-types'\nimport { Tag, Page404 } from 'components'\nimport {\n    selectSelectedTag,\n} from 'selectors/tags'\nimport { selectLoadingTags } from 'selectors/loading'\nimport {\n    getPosts,\n} from 'actions'\nimport { selectPostCollectionByTagId } from 'selectors/posts'\n\nclass TagPageContainer extends Component {\n    static propTypes = {\n        tag: PropTypes.object,\n        isLoadingTags: PropTypes.bool,\n        postsFilteredByTag: PropTypes.array,\n        getPosts: PropTypes.func,\n    }\n\n    componentDidMount() {\n        const { getPosts } = this.props\n\n        getPosts()\n    }\n\n    render() {\n        const {\n            tag,\n            isLoadingTags,\n            postsFilteredByTag,\n        } = this.props\n\n        if (isLoadingTags) {\n            return 'loading...'\n        }\n\n        if (!tag) {\n            return <Page404 />\n        }\n\n        return (\n            <Tag {...tag} posts={postsFilteredByTag} />\n        )\n    }\n}\n\nconst mapStateToProps = (state, { match }) => {\n    const selectedTagInSlug = getOr(null, ['params', 'tag'])(match)\n    const tag = selectSelectedTag(selectedTagInSlug)(state)\n    const selectedTagId = getOr(null, ['id'], tag)\n\n    return ({\n        tag,\n        isLoadingTags: selectLoadingTags(state),\n        postsFilteredByTag: selectPostCollectionByTagId(selectedTagId)(state),\n    })\n}\n\nconst mapDispatchToProps = ({\n    getPosts,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(TagPageContainer)\n","import { connect } from 'react-redux'\nimport { getTags } from 'actions'\nimport { selectTagCollection, selectTagIds } from 'selectors/tags'\nimport { Tags } from 'components/tags'\n\nconst mapStateToProps = (state, { tagIds }) => ({\n    tags: selectTagCollection(state),\n    tagIds: tagIds || selectTagIds(state),\n})\n\nconst mapDispatchToProps = {\n    getTags,\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Tags)\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        }\n                        else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            }\n            else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            }\n            else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Header } from 'components'\n\nconst HeaderContainer  = () => <Header />\n\nconst mapStateToProps = () => ({})\n\nexport default connect(mapStateToProps)(HeaderContainer)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport configureStore from './store'\nimport {\n    MainPageContainer,\n    PostContainer,\n    TagsContainer,\n    TagPageContainer,\n} from 'containers'\nimport { Layout } from 'components'\nimport * as serviceWorker from './serviceWorker'\nimport HeaderContainer from 'containers/header-container'\nimport './index.css'\n\nconst store = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Layout>\n                <HeaderContainer />\n                <TagsContainer />\n                <Switch>\n                    <Route exact path='/' component={MainPageContainer} />\n                    <Route path='/tags/:tag' component={TagPageContainer} />\n                    <Route path='/posts/:post' component={PostContainer} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import React from 'react'\nimport * as PropTypes from 'prop-types'\nimport styles from './style.module.css'\n\nexport const Layout = ({ children }) => (\n    <div className={styles.root}>{children}</div>\n)\n\nLayout.propTypes = {\n    children: PropTypes.node,\n}\n"],"sourceRoot":""}