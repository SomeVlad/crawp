{"version":3,"sources":["components/tags/style.module.css","components/post/style.module.css","components/logo/style.module.css","ui/img/style.module.css","ui/iframe/style.module.css","ui/codeblock/style.module.css","components/header/style.module.css","components/layout/style.module.css","endpoints/index.js","requests/index.js","normalizers/index.js","resolvers/index.js","selectors/posts.js","selectors/tags.js","actions/index.js","components/tags/index.js","containers/tags-container.js","ui/a/index.js","ui/p/index.js","ui/em/index.js","ui/span/index.js","ui/list/index.js","ui/br/index.js","ui/hr/index.js","ui/abbr/index.js","ui/heading/index.js","ui/img/index.js","ui/strong/index.js","ui/del/index.js","helpers/index.js","ui/iframe/index.js","ui/figure/index.js","ui/codeblock/index.js","components/dynamic-scroll-to-top/index.js","components/post/index.js","components/post-preview/index.js","components/post-preview-list/index.js","containers/main-page-container.js","components/404/index.js","selectors/loading.js","containers/post-container.js","components/tag-page/index.js","containers/tag-page-container.js","components/logo/index.js","components/header/index.js","containers/header-container.js","reducers/posts.js","reducers/tags.js","reducers/index.js","reducers/errors.js","reducers/loading.js","store.js","serviceWorker.js","index.js","components/layout/index.js"],"names":["module","exports","root","list","list-item","link","active","article","preview","footer","date","logo","img","iframe-wrap","iframe","iframe-image","video-link","pre","baseUrl","Endpoints","posts","tags","tagsRequest","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","result","wrap","_context","prev","next","fetch","mode","sent","json","abrupt","stop","apply","this","arguments","postsRequest","_ref2","_callee2","_context2","postSchema","schema","Entity","idAttribute","tagSchema","normalizePosts","_normalize","normalize","entities","getOr","normalizeTags","_normalize2","parser","DOMParser","getParsedContents","pipe","content","toConsumableArray","parseFromString","body","childNodes","getHeading","processPost","post","set","pick","processTag","resolvePosts","response","processedPosts","_normalizePosts","_normalizePosts2","postIds","postCollection","map","slicedToArray","resolveTags","processedTags","_normalizeTags","_normalizeTags2","tagIds","tagCollection","reject","orderBy","selectPosts","selectPostCollection","selectPostIds","selectTags","selectTagCollection","selectTagIds","getPosts","dispatch","getState","type","state","size","keys","payload","then","catch","error","Tag","name","slug","count","react_default","createElement","react","react_router_dom","className","styles","activeClassName","to","concat","Tags","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","props","getTags","_this$props","id","tags_Tag","Component","mapDispatchToProps","connect","A","href","children","isInternal","URL","hostname","window","location","target","rel","P","Em","Span","Ul","Ol","Li","Br","Hr","Abbr","title","H1","H2","H3","H4","H5","H6","Img","src","alt","sizes","srcset","imageClassNames","classNames","srcSet","loading","Strong","Del","getYoutubeThumbnailImageUrl","getYoutubeVideoLink","selectComponentByTagName","tagName","objectSpread","UI","Fragment","string","length","toUpperCase","slice","toLowerCase","renderNodeAsComponent","node","index","_node$tagName","textContent","allow","allowfullscreen","console","warn","contents","additionalParameters","assign","createReducer","initialState","actionLookup","undefined","action","isString","reducer","isFunction","getRandomNumberWithinRange","_ref$min","min","_ref$max","max","Math","round","random","cx","bind","youtubePreviewLinkClassNames","YoutubeVideoPreview","a_A","img_Img","Iframe","youtubeVideoId","url","replace","stringsArray","split","getYoutubeVideoIdFromString","iframe_YoutubeVideoPreview","Figure","Pre","Code","DynamicScrollToTop","history","hash","useEffect","element","document","querySelector","scrollIntoView","block","behavior","scrollTo","propTypes","PropTypes","ScrollToTop","withRouter","PostHeader","heading_H1","PostFooter","tags_container","dateTime","Date","toLocaleDateString","formatDate","Post","heading","articleClasses","post_PostHeader","post_PostFooter","PostPreview","post_Post","PostPreviewList","post_preview_PostPreview","Page404","selectLoading","selectLoadingPosts","selectLoadingTags","PostContainer","_this$props2","isLoadingPosts","match","selectedPostInSlug","find","TagPageContainer","tag","isLoadingTags","postsFilteredByTag","tag_page_Tag","tagId","selectedTagInSlug","selectedTagId","filter","includes","getAlternateLetters","getTextTransform","Logo","_getPrototypeOf2","_this","_len","args","Array","_key","call","fontFeatureSettings","textTransform","interval","_this2","setState","setInterval","clearInterval","_this$state","exact","style","Header","logo_Logo","header_Header","defineProperty","combineReducers","postsReducer","errors","_","tagsReducer","loadingPosts","loadingTags","INITIAL_STATE","enhancers","middleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","push","composedEnhancers","compose","applyMiddleware","Boolean","store","createStore","rootReducer","configureStore","ReactDOM","render","es","basename","process","header_container","react_router","path","component","MainPageContainer","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5571b2fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__1Kqx4\",\"list\":\"style_list__2Q_aN\",\"list-item\":\"style_list-item__1tBsy\",\"link\":\"style_link__1egW5\",\"active\":\"style_active__3bCbW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"style_article__3KKN2\",\"link\":\"style_link__1UsJu\",\"preview\":\"style_preview__EI3dA\",\"footer\":\"style_footer__1Y5e8\",\"date\":\"style_date__1J92U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"style_logo__bUMKv\",\"link\":\"style_link__2mbcy\",\"active\":\"style_active__2fDbX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"style_img__10R8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iframe-wrap\":\"style_iframe-wrap__2A2w4\",\"iframe\":\"style_iframe__2D5_P\",\"iframe-image\":\"style_iframe-image__2aLQA\",\"video-link\":\"style_video-link__1s8sx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pre\":\"style_pre__9hDnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2rrMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"style_root__2wf_j\"};","const baseUrl = 'http://blog.vladsamoylov.com'\n\nexport const Endpoints = {\n    posts: baseUrl + '/wp-json/wp/v2/posts?per_page=100',\n    tags: baseUrl + '/wp-json/wp/v2/tags',\n}\n","import { Endpoints } from 'endpoints'\n\nexport const tagsRequest = async () => {\n    const result = await fetch(Endpoints.tags, { mode: 'no-cors' })\n\n    return await result.json()\n}\n\nexport const postsRequest = async () => {\n    const result = await fetch(Endpoints.posts, { mode: 'no-cors' })\n\n    return await result.json()\n}\n","import { schema, normalize } from 'normalizr'\nimport { getOr } from 'lodash/fp'\n\nconst postSchema = new schema.Entity('post', {}, { idAttribute: 'id' })\nconst tagSchema = new schema.Entity('tag', {}, { idAttribute: 'id' })\n\nexport const normalizePosts = posts => {\n    const { entities, result } = normalize(posts, [postSchema])\n    const collection = getOr({}, ['post'], entities)\n\n    return [result, collection]\n}\n\nexport const normalizeTags = tags => {\n    const { entities, result } = normalize(tags, [tagSchema])\n    const collection = getOr({}, ['tag'], entities)\n\n    return [result, collection]\n}\n","import {\n    pipe,\n    getOr,\n    pick,\n    set,\n    map,\n    orderBy,\n    reject,\n} from 'lodash/fp'\nimport { postsRequest, tagsRequest } from 'requests'\nimport { normalizePosts, normalizeTags } from 'normalizers'\n\nconst parser = new DOMParser()\n\nconst parseFromStringAsText = content => [\n    ...parser\n        .parseFromString(content, 'text/html')\n        .body\n        .childNodes,\n]\n\nconst getParsedContents = pipe([\n    getOr('', ['content', 'rendered']),\n    parseFromStringAsText,\n])\n\nconst getHeading = getOr('', ['title', 'rendered'])\n\nconst setParsedContents = post => set(['contents'], getParsedContents(post), post)\n\nconst setHeading = post => set(['heading'], getHeading(post), post)\n\nconst processPost = pipe([\n    setParsedContents,\n    setHeading,\n    pick([\n        'id',\n        'heading',\n        'contents',\n        'slug',\n        'date',\n        'tags',\n    ]),\n])\n\nconst processTag = pick([\n    'count',\n    'id',\n    'name',\n    'slug',\n])\n\nexport const resolvePosts = async () => {\n    const response = await postsRequest()\n    const processedPosts = map(processPost, response)\n\n    const [postIds, postCollection] = normalizePosts(processedPosts)\n\n    return { postIds, postCollection }\n}\n\nexport const resolveTags = async () => {\n    const response = await tagsRequest()\n\n    const processedTags = pipe([\n        map(processTag),\n        reject(['count', 0]),\n        orderBy(['count', 'name'], ['desc', 'asc']),\n    ])(response)\n\n    const [tagIds, tagCollection] = normalizeTags(processedTags)\n\n    return { tagIds, tagCollection }\n}\n","import { getOr, pipe, find, filter } from 'lodash/fp'\n\nexport const selectPosts = getOr({}, ['posts'])\n\nexport const selectPostCollection = pipe([\n    selectPosts,\n    getOr({}, ['postCollection']),\n])\n\nexport const selectPostIds = pipe([\n    selectPosts,\n    getOr([], ['postIds']),\n])\n\nexport const selectSelectedPost = slug => pipe([\n    selectPostCollection,\n    find(post => post.slug === slug),\n])\n\nexport const selectPostCollectionByTagId = tagId => pipe([\n    selectPostCollection,\n    filter(post => post.tags.includes(tagId)),\n])\n","import { getOr, pipe, find } from 'lodash/fp'\n\nexport const selectTags = getOr({}, ['tags'])\n\nexport const selectTagCollection = pipe([\n    selectTags,\n    getOr({}, ['tagCollection']),\n])\n\nexport const selectTagIds = pipe([\n    selectTags,\n    getOr([], ['tagIds']),\n])\n\nexport const selectSelectedTag = slug => pipe([\n    selectTagCollection,\n    find(tag => tag.slug === slug),\n])\n","import { size, keys } from 'lodash/fp'\nimport { resolvePosts, resolveTags } from 'resolvers'\nimport {\n    selectPostCollection,\n    selectPosts,\n} from 'selectors/posts'\nimport { selectTagCollection, selectTags } from 'selectors/tags'\n\nexport const POSTS_GET = 'POSTS_GET'\nexport const POSTS_GET_SUCCESS = 'POSTS_GET_SUCCESS'\nexport const POSTS_GET_FAILURE = 'POSTS_GET_FAILURE'\n\nexport const TAGS_GET = 'TAGS_GET'\nexport const TAGS_GET_SUCCESS = 'TAGS_GET_SUCCESS'\nexport const TAGS_GET_FAILURE = 'TAGS_GET_FAILURE'\n\nexport const getPosts = () => (dispatch, getState) => {\n    dispatch({\n        type: POSTS_GET,\n    })\n\n    const state = getState()\n    const postCollection = selectPostCollection(state)\n\n    if (size(keys(postCollection)) > 0) {\n        return dispatch({\n            type: POSTS_GET_SUCCESS,\n            payload: selectPosts(state),\n        })\n    }\n\n    return resolvePosts()\n        .then(posts => dispatch({\n            type: POSTS_GET_SUCCESS,\n            payload: posts,\n        }))\n        .catch(error => dispatch({\n            type: POSTS_GET_FAILURE,\n            payload: error,\n        }))\n}\n\nexport const getTags = () => (dispatch, getState) => {\n    dispatch({\n        type: TAGS_GET,\n    })\n\n    const state = getState()\n    const tagCollection = selectTagCollection(state)\n\n    if (size(keys(tagCollection)) > 0) {\n        return dispatch({\n            type: TAGS_GET_SUCCESS,\n            payload: selectTags(state),\n        })\n    }\n\n    return resolveTags()\n        .then(tags => dispatch({\n            type: TAGS_GET_SUCCESS,\n            payload: tags,\n        }))\n        .catch(error => dispatch({\n            type: TAGS_GET_FAILURE,\n            payload: error,\n        }))\n}\n","import React, { Component, Fragment } from 'react'\nimport * as PropTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\nimport styles from './style.module.css'\n\nconst Tag = ({ name, slug, count }) => (\n    <Fragment>\n        <NavLink\n            className={styles.link}\n            activeClassName={styles.active}\n            to={`/tags/${slug}`}>\n            {name}\n        </NavLink>\n        <sup>{count}</sup>\n    </Fragment>\n)\n\nTag.propTypes = {\n    count: PropTypes.number,\n    name: PropTypes.string,\n    slug: PropTypes.string,\n}\n\nexport class Tags extends Component {\n    static propTypes = {\n        tags: PropTypes.objectOf(\n            PropTypes.shape({\n                count: PropTypes.number,\n                id: PropTypes.number,\n                name: PropTypes.string,\n                slug: PropTypes.string,\n            })\n        ),\n        tagIds: PropTypes.arrayOf(PropTypes.number),\n        getTags: PropTypes.func,\n    }\n\n    componentDidMount() {\n        this.props.getTags()\n    }\n\n    render() {\n        const { tags, tagIds } = this.props\n\n        return (\n            <div className={styles.root}>\n                <ul className={styles.list}>\n                    {tagIds.map(id => (\n                        <li key={id} className={styles['list-item']}>\n                            <Tag {...tags[id]} />\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n","import { connect } from 'react-redux'\nimport { getTags } from 'actions'\nimport { selectTagCollection, selectTagIds } from 'selectors/tags'\nimport { Tags } from 'components/tags'\n\nconst mapStateToProps = (state, { tagIds }) => ({\n    tags: selectTagCollection(state),\n    tagIds: tagIds || selectTagIds(state),\n})\n\nconst mapDispatchToProps = {\n    getTags,\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Tags)\n","import React, { Fragment } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport const A = ({ href, children, className }) => {\n    const isInternal = new URL(href).hostname === window.location.hostname\n    const target = isInternal ? '_self' : '_blank'\n    const rel = isInternal ? null : 'noreferrer noopener'\n\n    return (\n        <Fragment>\n            <a\n                className={className}\n                href={href}\n                target={target}\n                rel={rel}>\n                {children}\n            </a>\n            <link rel='prefetch' href={href} />\n        </Fragment>\n    )\n}\n\nA.propTypes = {\n    href: PropTypes.string,\n    children: PropTypes.node,\n    className: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class P extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <p>{this.props.children}</p>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Em extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <em>{this.props.children}</em>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Span extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <span>{this.props.children}</span>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nclass Ul extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <ul>{this.props.children}</ul>\n        )\n    }\n}\n\nclass Ol extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <ol>{this.props.children}</ol>\n        )\n    }\n}\n\nclass Li extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <li>{this.props.children}</li>\n        )\n    }\n}\n\nexport {\n    Ul,\n    Ol,\n    Li,\n}\n","import React, { Component } from 'react'\n\nexport class Br extends Component {\n    render() {\n        return (\n            <br />\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport class Hr extends Component {\n    render() {\n        return (\n            <hr />\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Abbr extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        title: PropTypes.string,\n    }\n\n    render() {\n        const { children, title } = this.props\n\n        return (\n            <abbr title={title}>{children}</abbr>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nclass H1 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h1>{this.props.children}</h1>\n        )\n    }\n}\n\nclass H2 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h2>{this.props.children}</h2>\n        )\n    }\n}\n\nclass H3 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h3>{this.props.children}</h3>\n        )\n    }\n}\n\nclass H4 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h4>{this.props.children}</h4>\n        )\n    }\n}\n\nclass H5 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h5>{this.props.children}</h5>\n        )\n    }\n}\n\nclass H6 extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <h6>{this.props.children}</h6>\n        )\n    }\n}\n\nexport {\n    H1,\n    H2,\n    H3,\n    H4,\n    H5,\n    H6,\n}\n","import React from 'react'\nimport * as PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport styles from './style.module.css'\n\nexport const Img = ({ src, alt, title, sizes, srcset, className }) => {\n    const imageClassNames = classNames(className, styles.img)\n\n    return (\n        <img\n            className={imageClassNames}\n            src={src}\n            alt={alt}\n            title={title}\n            sizes={sizes}\n            srcSet={srcset}\n            loading='lazy' /* https://addyosmani.com/blog/lazy-loading/ */\n        />\n    )\n}\n\nImg.propTypes = {\n    src: PropTypes.string,\n    alt: PropTypes.string,\n    title: PropTypes.string,\n    sizes: PropTypes.string,\n    srcset: PropTypes.string,\n    className: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Strong extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <strong>{this.props.children}</strong>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Del extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <del>{this.props.children}</del>\n        )\n    }\n}\n","import React, { Fragment } from 'react'\nimport { isString, isFunction } from 'lodash/fp'\nimport * as UI from 'ui'\n\nexport const getYoutubeVideoIdFromString = url => {\n    if (!url || !url.replace) {\n        return null\n    }\n    const stringsArray = url.replace(/([><])/gi, '').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/)\n\n    if (stringsArray[2]) {\n        return stringsArray[2].split(/[^0-9a-z_-]/i)[0]\n    }\n\n    return stringsArray[0]\n}\n\nexport const getYoutubeThumbnailImageUrl = id => `https://i.ytimg.com/vi/${id}/mqdefault.jpg`\nexport const getYoutubeVideoLink = id => `https://www.youtube.com/watch?v=${id}`\n\nexport const capitalize = string => {\n    if (typeof string !== 'string' || string.length === 0) {\n        return null\n    }\n\n    return string[0].toUpperCase() + string.slice(1).toLowerCase()\n}\n\nconst DEFAULT_TAG_NAME = 'span'\n\nconst selectComponentByTagName = tagName => ({\n    ...UI,\n    Fragment,\n}[capitalize(tagName)])\n\nexport const renderNodeAsComponent = (node, index) => {\n    const {\n        childNodes,\n        tagName = 'fragment',\n        textContent,\n        href,\n        title,\n        src,\n        alt,\n        allow,\n        allowfullscreen,\n        sizes,\n        srcset,\n    } = node\n\n    if (!selectComponentByTagName(tagName)) {\n        // eslint-disable-next-line no-console\n        console.warn(node)\n    }\n    const Component = selectComponentByTagName(tagName) || selectComponentByTagName(DEFAULT_TAG_NAME)\n\n    let contents\n\n    if (!childNodes || childNodes.length === 0) {\n        contents = textContent\n    }\n    else {\n        contents = [...childNodes].map(renderNodeAsComponent)\n    }\n\n    const additionalParameters = {\n        ...href && { href },\n        ...title && { title },\n        ...src && { src },\n        ...alt && { alt },\n        ...allow && { allow },\n        ...allowfullscreen && { allowfullscreen },\n        ...sizes && { sizes },\n        ...srcset && { srcset },\n    }\n\n    return (\n        <Component\n            key={index}\n            {...additionalParameters}>\n            {contents}\n        </Component>\n    )\n}\n\nexport const createReducer = (initialState, actionLookup = {}) => (state = initialState, action) => {\n    if (!action || !isString(action.type)) {\n        return state\n    }\n\n    const reducer = actionLookup[action.type]\n\n    if (!isFunction(reducer)) {\n        return state\n    }\n\n    return reducer(state, action)\n}\n\n/**\n * Returns random number within range\n * @param min\n * @param max\n * @returns {number}\n */\nexport const getRandomNumberWithinRange = ({ min = 0, max = 1 }) => Math.round(Math.random() * (max - min)) + min\n\nexport const formatDate = date => {\n    const dateObject = new Date(date)\n\n    return dateObject.toLocaleDateString()\n}\n","import React from 'react'\nimport styles from './style.module.css'\nimport * as PropTypes from 'prop-types'\nimport classNames from 'classnames/bind'\nimport {\n    getYoutubeVideoIdFromString,\n    getYoutubeThumbnailImageUrl,\n    getYoutubeVideoLink,\n} from 'helpers'\nimport { A, Img } from 'ui'\n\nconst cx = classNames.bind(styles)\nconst youtubePreviewLinkClassNames = cx('iframe', 'video-link')\n\nconst YoutubeVideoPreview = ({ id }) => (\n    <A\n        className={youtubePreviewLinkClassNames}\n        href={getYoutubeVideoLink(id)}>\n        <Img src={getYoutubeThumbnailImageUrl(id)}\n            className={cx('iframe-image')}\n            alt='youtube video'\n            title='youtube video' />\n    </A>\n)\n\nYoutubeVideoPreview.propTypes = {\n    id: PropTypes.string,\n}\n\nexport const Iframe = ({ src, title }) => {\n    const youtubeVideoId = getYoutubeVideoIdFromString(src)\n\n    return (\n        <span className={cx('iframe-wrap')}>\n            {youtubeVideoId ? (\n                <YoutubeVideoPreview id={youtubeVideoId} />\n            ) : (\n                <iframe className={cx('iframe')}\n                    src={src}\n                    title={title}\n                    loading='lazy' />\n            )}\n        </span>\n    )\n}\n\nIframe.propTypes = {\n    src: PropTypes.string,\n    title: PropTypes.string,\n}\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\n\nexport class Figure extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n    }\n\n    render() {\n        return (\n            <figure>{this.props.children}</figure>\n        )\n    }\n}\n","import React from 'react'\nimport styles from './style.module.css'\nimport * as PropTypes from 'prop-types'\n\nconst Pre = ({ children }) => (\n    <pre className={styles.pre}>{children}</pre>\n)\n\nPre.propTypes = {\n    children: PropTypes.node,\n}\n\nconst Code = ({ children }) => (\n    <code>{children}</code>\n)\n\nCode.propTypes = {\n    children: PropTypes.node,\n}\n\nexport { Pre, Code }\n","import { useEffect } from 'react'\nimport * as PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\n\nconst DynamicScrollToTop = ({ history, location }) => {\n\n    const { action } = history\n    const { hash } = location\n\n    useEffect(() => {\n        if (action === 'POP') {\n            return\n        }\n\n        if (hash) {\n            const element = document.querySelector(hash)\n\n            if (element) {\n                element.scrollIntoView({ block: 'start', behavior: 'smooth' })\n            }\n        }\n        else {\n            window.scrollTo(0, 0)\n        }\n    })\n\n    return null\n}\n\nDynamicScrollToTop.propTypes = {\n    history: PropTypes.shape({\n        action: PropTypes.string,\n    }),\n    location: PropTypes.shape({\n        hash: PropTypes.string,\n    }),\n}\n\nexport const ScrollToTop = withRouter(DynamicScrollToTop)\n","import React, { Component, Fragment } from 'react'\nimport * as PropTypes from 'prop-types'\nimport classNames from 'classnames/bind'\nimport { Link } from 'react-router-dom'\nimport TagsContainer from 'containers/tags-container'\nimport { H1 } from 'ui'\nimport {\n    formatDate,\n    renderNodeAsComponent,\n} from 'helpers'\nimport { ScrollToTop } from 'components/dynamic-scroll-to-top'\nimport styles from './style.module.css'\n\nconst cx = classNames.bind(styles)\n\nconst PostHeader = ({ slug, preview, children }) => {\n    if (preview) {\n        return (\n            <Link to={`/posts/${slug}`} className={styles.link}>\n                <H1>{children}</H1>\n            </Link>\n        )\n    }\n\n    return (\n        <H1>{children}</H1>\n    )\n}\n\nPostHeader.propTypes = {\n    slug: PropTypes.string,\n    preview: PropTypes.bool,\n    children: PropTypes.node,\n}\n\nconst PostFooter = ({ tags, date }) => (\n    <footer className={styles.footer}>\n        {tags && (\n            <TagsContainer tagIds={tags} />\n        )}\n        {date && (\n            <time\n                className={styles.date}\n                dateTime={date}>\n                {formatDate(date)}\n            </time>\n        )}\n    </footer>\n)\n\nPostFooter.propTypes = {\n    tags: PropTypes.arrayOf(\n        PropTypes.number\n    ),\n    date: PropTypes.string,\n}\n\nclass Post extends Component {\n    static propTypes = {\n        heading: PropTypes.string,\n        contents: PropTypes.array,\n        slug: PropTypes.string,\n        preview: PropTypes.bool,\n        tags: PropTypes.arrayOf(\n            PropTypes.number\n        ),\n        date: PropTypes.string,\n    }\n\n    render() {\n        const {\n            heading,\n            contents,\n            preview,\n            slug,\n            tags,\n            date,\n        } = this.props\n        const articleClasses = cx('article', { preview })\n\n        return (\n            <Fragment>\n                <article className={articleClasses}>\n                    <PostHeader\n                        slug={slug}\n                        preview={preview}>\n                        {heading}\n                    </PostHeader>\n                    {contents.map(renderNodeAsComponent)}\n                    <PostFooter\n                        tags={tags}\n                        date={date} />\n                </article>\n                <ScrollToTop />\n            </Fragment>\n        )\n    }\n}\n\nexport { Post }\n","import React from 'react'\nimport { Post } from 'components/post'\n\nexport const PostPreview = props => <Post {...props} preview />\n","import React, { Component } from 'react'\nimport * as PropTypes from 'prop-types'\nimport { PostPreview } from 'components/post-preview'\n\nexport class PostPreviewList extends Component {\n    static propTypes = {\n        posts: PropTypes.objectOf(\n            PropTypes.shape({\n                id: PropTypes.number,\n                slug: PropTypes.string,\n                contents: PropTypes.array,\n                heading: PropTypes.string,\n                date: PropTypes.string,\n            })\n        ),\n        postIds: PropTypes.arrayOf(PropTypes.number),\n        getPosts: PropTypes.func,\n    }\n\n    componentDidMount() {\n        this.props.getPosts()\n    }\n\n    render() {\n        const { posts, postIds } = this.props\n\n        return postIds.map(id => <PostPreview key={id} {...posts[id]} />)\n    }\n}\n","import { connect } from 'react-redux'\nimport { getPosts } from 'actions'\nimport { PostPreviewList } from 'components/post-preview-list'\nimport {\n    selectPostCollection,\n    selectPostIds,\n} from 'selectors/posts'\n\nconst mapStateToProps = state => ({\n    posts: selectPostCollection(state),\n    postIds: selectPostIds(state),\n})\n\nconst mapDispatchToProps = {\n    getPosts,\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PostPreviewList)\n","export const Page404 = () => 404\n","import { getOr, pipe } from 'lodash/fp'\n\nconst selectLoading = getOr(null, 'loading')\n\nexport const selectLoadingPosts = pipe([\n    selectLoading,\n    getOr(false, ['loadingPosts']),\n])\n\nexport const selectLoadingTags = pipe([\n    selectLoading,\n    getOr(false, ['loadingTags']),\n])\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { keys, size, getOr } from 'lodash/fp'\nimport * as PropTypes from 'prop-types'\nimport { getPosts } from 'actions'\nimport { Page404 } from 'components/404'\nimport { Post } from 'components/post'\nimport {\n    selectPostCollection,\n    selectSelectedPost,\n} from 'selectors/posts'\nimport {\n    selectLoadingPosts,\n} from 'selectors/loading'\n\nclass PostContainer extends Component {\n    static propTypes = {\n        posts: PropTypes.object,\n        post: PropTypes.object,\n        isLoadingPosts: PropTypes.bool,\n        getPosts: PropTypes.func,\n    }\n\n    componentDidMount() {\n        const { posts, getPosts } = this.props\n\n        if (size(keys(posts)) === 0) {\n            getPosts()\n        }\n    }\n\n    render() {\n        const { post, isLoadingPosts } = this.props\n\n        if (isLoadingPosts) {\n            return 'loading...'\n        }\n\n        if (!post) {\n            return <Page404 />\n        }\n\n        return (\n            <Post {...post} />\n        )\n    }\n}\n\nconst mapStateToProps = (state, { match }) => {\n    const selectedPostInSlug = getOr(null, ['params', 'post'])(match)\n    const post = selectSelectedPost(selectedPostInSlug)(state)\n    const posts = selectPostCollection(state)\n    const isLoadingPosts = selectLoadingPosts(state)\n\n    return ({\n        post,\n        posts,\n        isLoadingPosts,\n    })\n}\n\nconst mapDispatchToProps = {\n    getPosts,\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PostContainer)\n","import React from 'react'\nimport * as PropTypes from 'prop-types'\nimport { PostPreview } from 'components/post-preview'\n\nexport const Tag = ({ posts }) => (\n    posts.map(post => <PostPreview key={post.id} {...post} />)\n)\n\nTag.propTypes = {\n    posts: PropTypes.array,\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { getOr } from 'lodash/fp'\nimport * as PropTypes from 'prop-types'\nimport { Page404 } from 'components/404'\nimport { Tag } from 'components/tag-page'\nimport {\n    selectSelectedTag,\n} from 'selectors/tags'\nimport { selectLoadingTags } from 'selectors/loading'\nimport {\n    getPosts,\n} from 'actions'\nimport { selectPostCollectionByTagId } from 'selectors/posts'\n\nclass TagPageContainer extends Component {\n    static propTypes = {\n        tag: PropTypes.object,\n        isLoadingTags: PropTypes.bool,\n        postsFilteredByTag: PropTypes.array,\n        getPosts: PropTypes.func,\n    }\n\n    componentDidMount() {\n        const { getPosts } = this.props\n\n        getPosts()\n    }\n\n    render() {\n        const {\n            tag,\n            isLoadingTags,\n            postsFilteredByTag,\n        } = this.props\n\n        if (isLoadingTags) {\n            return 'loading...'\n        }\n\n        if (!tag) {\n            return <Page404 />\n        }\n\n        return (\n            <Tag {...tag} posts={postsFilteredByTag} />\n        )\n    }\n}\n\nconst mapStateToProps = (state, { match }) => {\n    const selectedTagInSlug = getOr(null, ['params', 'tag'])(match)\n    const tag = selectSelectedTag(selectedTagInSlug)(state)\n    const selectedTagId = getOr(null, ['id'], tag)\n\n    return ({\n        tag,\n        isLoadingTags: selectLoadingTags(state),\n        postsFilteredByTag: selectPostCollectionByTagId(selectedTagId)(state),\n    })\n}\n\nconst mapDispatchToProps = ({\n    getPosts,\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(TagPageContainer)\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { getRandomNumberWithinRange } from 'helpers'\nimport styles from './style.module.css'\n\nconst LOGO_RERENDER_INTERVAL = 3000\n\nconst getAlternateLetters = () => `0${getRandomNumberWithinRange({ min: 1, max: 15 })}`.slice(-2)\nconst getTextTransform = () => ['capitalize', 'lowercase', 'uppercase'][getRandomNumberWithinRange({ max: 2 })]\n\nexport class Logo extends Component {\n    state = {\n        fontFeatureSettings: `'ss${getAlternateLetters()}' on`,\n        textTransform: getTextTransform(),\n        interval: null,\n    }\n\n    componentDidMount() {\n        this.setState({\n            interval: setInterval(() => this.setState({\n                fontFeatureSettings: `'ss${getAlternateLetters()}' on`,\n                textTransform: getTextTransform(),\n            }), LOGO_RERENDER_INTERVAL),\n        })\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.interval)\n    }\n\n    render() {\n        const { fontFeatureSettings, textTransform } = this.state\n\n        return (\n            <NavLink\n                className={styles.link}\n                activeClassName={styles.active}\n                exact\n                to='/'>\n                <h1\n                    className={styles.logo}\n                    style={{ fontFeatureSettings, textTransform }}>\n                    Vlad Samoylov\n                </h1>\n            </NavLink>\n        )\n    }\n}\n","import React from 'react'\nimport { Logo } from 'components/logo'\nimport styles from './style.module.css'\n\nexport const Header = () => (\n    <header className={styles.root}>\n        <Logo />\n    </header>\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Header } from 'components/header'\n\nconst HeaderContainer  = () => <Header />\n\nconst mapStateToProps = () => ({})\n\nexport default connect(mapStateToProps)(HeaderContainer)\n","import {\n    POSTS_GET_SUCCESS,\n} from 'actions'\nimport { createReducer } from 'helpers'\n\nconst INITIAL_STATE = {\n    postIds: [],\n    postCollection: {},\n}\n\nexport default createReducer(INITIAL_STATE, {\n    [POSTS_GET_SUCCESS]: (state, { payload }) => {\n        const { postIds, postCollection } = payload\n\n        return {\n            postIds,\n            postCollection,\n        }\n    },\n})\n","import {\n    TAGS_GET_SUCCESS,\n} from 'actions'\nimport { createReducer } from 'helpers'\n\nconst INITIAL_STATE = {\n    tagIds: [],\n    tagCollection: {},\n}\n\nexport default createReducer(INITIAL_STATE, {\n    [TAGS_GET_SUCCESS]: (state, { payload }) => {\n        const { tagIds, tagCollection } = payload\n\n        return {\n            tagIds,\n            tagCollection,\n        }\n    },\n})\n","import { combineReducers } from 'redux'\nimport postsReducer from './posts'\nimport errorsReducer from './errors'\nimport tagsReducer from './tags'\nimport loadingReducer from './loading'\n\nexport default combineReducers({\n    posts: postsReducer,\n    errors: errorsReducer,\n    tags: tagsReducer,\n    loading: loadingReducer,\n})\n","import {\n    POSTS_GET_FAILURE,\n    TAGS_GET_FAILURE,\n} from 'actions'\n\nexport default (_, { type }) => {\n    switch (type) {\n        case TAGS_GET_FAILURE:\n        case POSTS_GET_FAILURE: {\n            return 404\n        }\n        default:\n            return null\n    }\n}\n","import {\n    POSTS_GET,\n    POSTS_GET_SUCCESS,\n    POSTS_GET_FAILURE,\n    TAGS_GET,\n    TAGS_GET_FAILURE,\n    TAGS_GET_SUCCESS,\n} from 'actions'\n\nexport default (state = null, { type }) => {\n    switch (type) {\n        case POSTS_GET:\n            return {\n                ...state,\n                loadingPosts: true,\n            }\n        case POSTS_GET_FAILURE:\n        case POSTS_GET_SUCCESS:\n            return {\n                ...state,\n                loadingPosts: false,\n            }\n        case TAGS_GET:\n            return {\n                ...state,\n                loadingTags: true,\n            }\n        case TAGS_GET_SUCCESS:\n        case TAGS_GET_FAILURE:\n            return {\n                ...state,\n                loadingTags: false,\n            }\n        default:\n            return state\n    }\n}\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from 'reducers'\n\nconst INITIAL_STATE = {\n    posts: {},\n    tags: {},\n    errors: null,\n}\n\nconst enhancers = []\nconst middleware = [thunk]\n\nconst { __REDUX_DEVTOOLS_EXTENSION__ } = window\n\nif (typeof __REDUX_DEVTOOLS_EXTENSION__ === 'function') {\n    enhancers.push(__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\nexport default function configureStore(initialState = INITIAL_STATE) {\n    return createStore(\n        rootReducer,\n        initialState,\n        composedEnhancers\n    )\n}\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        }\n                        else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            }\n            else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            }\n            else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport MainPageContainer from 'containers/main-page-container'\nimport PostContainer from 'containers/post-container'\nimport TagsContainer from 'containers/tags-container'\nimport TagPageContainer from 'containers/tag-page-container'\nimport HeaderContainer from 'containers/header-container'\nimport { Layout } from 'components/layout'\nimport configureStore from './store'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nconst store = configureStore()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Layout>\n                <HeaderContainer />\n                <TagsContainer />\n                <Switch>\n                    <Route exact path='/' component={MainPageContainer} />\n                    <Route path='/tags/:tag' component={TagPageContainer} />\n                    <Route path='/posts/:post' component={PostContainer} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n)\n\nserviceWorker.unregister()\n","import React from 'react'\nimport * as PropTypes from 'prop-types'\nimport styles from './style.module.css'\n\nexport const Layout = ({ children }) => (\n    <div className={styles.root}>{children}</div>\n)\n\nLayout.propTypes = {\n    children: PropTypes.node,\n}\n"],"sourceRoot":""}